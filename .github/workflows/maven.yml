# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # - uses: actions/checkout@v3
    # - name: Set up JDK 11
    #   uses: actions/setup-java@v3
    #   with:
    #     java-version: '11'
    #     distribution: 'temurin'
    #     cache: maven
    # - name: Build with Maven
    #   run: mvn -B package --file ./2201/spring-boot/basic-rest-api/pom.xml
    
    # - name: Generate Image Name with Tag
    #   id: vars
    #   env:
    #     REPOSITORY_URL: dipanjalmaitra/basic-rest-api
    #     TAG_ID: ${{ github.sha }}
    #   # run: echo "::set-output name=tag_id::$(git rev-parse --short HEAD)"
    #   run: echo "::set-output name=image_name::$REPOSITORY_URL:$TAG_ID"
    
    # - name: Check Tag
    #   run: echo ${{ steps.vars.outputs.image_name }}
    
    # - name: Login to DockerHub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    # - uses: actions/checkout@v3
    # - name: Build Docker image and Push to dockerhub
    #   run: | 
    #    ls
    #    docker build . --file ./2201/spring-boot/basic-rest-api/Dockerfile-multistage --tag dipanjalmaitra/basic-test:${{ github.sha }}
    #    docker push dipanjalmaitra/basic-test:${{ github.sha }}

    # - name: Build and push
    #   uses: docker/build-push-action@v3
    #   with:
    #     file: ./2201/spring-boot/basic-rest-api/Dockerfile-multistage
    #     push: true
    #     # tags: dipanjalmaitra/simple-rest-api:${{ github.sha }}
    #     tags: ${{ steps.vars.outputs.image_name }}
    

    - name: Run docker container
      uses: appleboy/ssh-action@master
      env:
        # IMAGE_NAME: ${{ steps.vars.outputs.image_name }}
        IMAGE_NAME: dipanjalmaitra/basic-rest-api:eb1815fff3ce33229eb7d1adfaac5233117df780
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          docker stop basic-rest-api
          docker container rm basic-rest-api
          docker run -d --name basic-rest-api --network common-net --publish 8080:8080 -e DB_URL=jdbc:mysql://172.18.0.2:3306/java-2201 dipanjalmaitra/basic-rest-api:eb1815fff3ce33229eb7d1adfaac5233117df780